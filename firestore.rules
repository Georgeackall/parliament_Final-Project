rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'admin';
    }

    // TODO: Even with admins, need to limit
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    match /posts/{pid} {
      allow read: if true;
      allow update: if request.auth != null
                    && resource.data.status == 'draft'
                    && request.resource.data.status == 'published'
                    && resource.data.diff(request.resource.data).changedKeys().hasOnly(['status']);
      allow create, delete: if false;
    }

    match /stories/{sid} {
      allow read: if true;
      allow write: if false;
    }

    match /platforms/{pid} {
      allow read: if true;
      allow write: if false;
    }

    match /rooms/{rid} {
      allow read: if true;
      allow write: if false;

      match /messages/{mid} {
        allow create: if request.auth != null;
        allow read: if true;
      }
    }

    match /entities/{eid} {
      allow read: if true;
      allow write: if false;
    }

    match /statements/{stid} {
      allow read: if true;
      allow write: if false;
    }

    match /users/{uid} {
      allow read: if request.auth != null && request.auth.uid == uid;
      allow write: if request.auth != null 
                   && request.auth.uid == uid 
                   && resource.data.role == request.resource.data.role;
    }

    // Deny all other access for non-admin users
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
